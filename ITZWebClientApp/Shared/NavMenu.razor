
@using ForgeLibs.Models;
@using ITZWebClientApp.Infraestructure.Data;
@inject IItzRepository repo;

<style>
    .sidebar {
        /*    background-image: linear-gradient(180deg, #333333 0%, #3a0647 70%);*/
        background-image: linear-gradient(180deg, var(--ribbonColor) 0%, var(--webFavoriteColor) 70%);
        /*    flex-shrink: 0;*/
        flex-basis: 250px;
        overflow: auto;
        display: flex;
        flex-direction: column;
        width: 350px;
        /*    height: 100vh;*/
        position: sticky;
        top: 0;
        /*    min-width: 180px;*/
        transition: 0.5s;
        height: calc(100vh - var(--ribbonHeight))
    }

        .sidebar .top-row {
            background-color: rgba(51,51,51,1);
            position: fixed;
            width: 100%;
        }

        .sidebar .navbar-brand {
            font-size: 1.1rem;
        }

        .sidebar .oi {
            width: 2rem;
            font-size: 1.1rem;
            vertical-align: text-top;
            top: -2px;
            position: inherit;
        }

        .sidebar .nav-item {
            font-size: 0.9rem;
            padding-bottom: 0.5rem;
        }

            .sidebar .nav-item:first-of-type {
/*                padding-top: 1rem;*/
            }

            .sidebar .nav-item:last-of-type {
/*                padding-bottom: 1rem;*/
            }

        .sidebar .nav-item {
            color: #d7d7d7;
        }

            .sidebar .nav-item b {
                font-size: smaller;
            }

            .sidebar .nav-item a {
                color: #d7d7d7;
                border-radius: 4px;
                height: 3rem;
                display: flex;
                align-items: center;
                /*line-height: 3rem;*/
            }

                .sidebar .nav-item a.active {
                    background-color: rgba(255,255,255,0.25);
                    color: white;
                }

                .sidebar .nav-item a:hover {
                    background-color: rgba(255,255,255,0.1);
                    color: white;
                }

        .sidebar .collapse {
            /* Never collapse the sidebar for wide screens */
            display: block;
            /*        margin-top: 60px;*/
        }

        .sidebar.hide {
            flex-basis: 0;
        }


        .sidebar .dontCollapse {
            /*        margin-top: 60px;*/
        }
</style>

<style>
    ul.subList {
        list-style: disclosure-closed;
    }
    li.listGroup {
        list-style: disclosure-closed;
        font-weight:bold;
    }
    li.nav-item .item {
        list-style: disc;
        font-size: smaller;
        height:45px;
    }
    .nav-link-app, .nav-link-project {
/*        font-size:10px;*/
        text-decoration:none;
        padding:5px;
        margin-top:5px;
    }
        .nav-link-app:hover, .nav-link-project:hover {
            text-decoration: none;
        }

</style>

    <div style="flex-basis:100%; overflow:auto;">
        <div class="@navMenuCssClass" @onclick="ToggleNavMenu">
            <ul class="nav flex-column">
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="cv" Match="NavLinkMatch.All" @onclick="()=> { showProjects = false; showApps = false; }">
                        <span aria-hidden="true">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="24" fill="currentColor" class="bi bi-box" viewBox="3 0 16 16">
                                <path fill-rule="evenodd" d="M10.646.646a.5.5 0 0 1 .708 0l4 4a.5.5 0 0 1 0 .708l-1.902 1.902-.829 3.313a1.5 1.5 0 0 1-1.024 1.073L1.254 14.746 4.358 4.4A1.5 1.5 0 0 1 5.43 3.377l3.313-.828L10.646.646zm-1.8 2.908l-3.173.793a.5.5 0 0 0-.358.342l-2.57 8.565 8.567-2.57a.5.5 0 0 0 .34-.357l.794-3.174-3.6-3.6z" />
                                <path fill-rule="evenodd" d="M2.832 13.228L8 9a1 1 0 1 0-1-1l-4.228 5.168-.026.086.086-.026z" />
                            </svg>
                        </span> Experiencia
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="knowledge" Match="NavLinkMatch.All" @onclick="()=> { showProjects = false; showApps = false; }">
                        <span aria-hidden="true">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="24" fill="currentColor" class="bi bi-box" viewBox="3 0 16 16">
                                <path d="M4 11H2v3h2v-3zm5-4H7v7h2V7zm5-5v12h-2V2h2zm-2-1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1h-2zM6 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7zm-5 4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-3z" />
                            </svg>
                        </span> Conocimientos
                    </NavLink>
                </li>

                <li class="nav-item px-3 subList">
                    <NavLink class="nav-link" @onclick="()=> { showProjects = !showProjects; showApps = false; }">
                        <span  aria-hidden="true">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="24" fill="currentColor" class="bi bi-easel" viewBox="3 0 16 16">
                                <path d="M8 0a.5.5 0 0 1 .473.337L9.046 2H14a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-1.85l1.323 3.837a.5.5 0 1 1-.946.326L11.092 11H8.5v3a.5.5 0 0 1-1 0v-3H4.908l-1.435 4.163a.5.5 0 1 1-.946-.326L3.85 11H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h4.954L7.527.337A.5.5 0 0 1 8 0zM2 3v7h12V3H2z" />
                            </svg>
                        </span> Portafolio
                    </NavLink>
                    @if (showProjects)
                    {
                        <ul class="subList">
                            @foreach (Project project in _projects)
                            {
                                if (repo.ImageInfo.Where(x => x.ProjectId == project.Id).Count() == 0) continue;
                                <li class="nav-item item">
                                    <NavLink class="nav-link-project" href=@($"projects/{@project.Id}") @onclick="()=> {  }">
                                        @project.Name
                                    </NavLink>
                                </li>
                            }
                        </ul>
                    }
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="/forgedesktop/1702">
                        <span aria-hidden="true">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="24" fill="currentColor" class="bi bi-box" viewBox="3 0 16 16">
                                <path d="M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5 8 5.961 14.154 3.5 8.186 1.113zM15 4.239l-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923l6.5 2.6zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464L7.443.184z" />
                            </svg>
                        </span> Forge App
                    </NavLink>
                </li>
                @*@for (int i = 0; i < 5; i++)
        {
            string n = "cycle" + i;
            <li class="nav-item px-3">
                <NavLink class="nav-link" href=@($"/cycle/{i}")>
                    <span class="oi oi-terminal" aria-hidden="true"></span> @n
                </NavLink>
            </li>
        }*@

                <li class="nav-item px-3 subList">
                    <NavLink class="nav-link" href="apps/index" @onclick="()=> { showProjects = false; showApps = !showApps; }">
                        <span aria-hidden="true">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="24" fill="currentColor" class="bi bi-box" viewBox="3 0 16 16">
                                <path d="M6 9a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3A.5.5 0 0 1 6 9zM3.854 4.146a.5.5 0 1 0-.708.708L4.793 6.5 3.146 8.146a.5.5 0 1 0 .708.708l2-2a.5.5 0 0 0 0-.708l-2-2z" />
                                <path d="M2 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2zm12 1a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h12z" />
                            </svg>
                        </span> Apps

                    </NavLink>
                    @if (false)
                    {
                        <ul class="subList">
                            @for (int g = 0; g < appGroups.Count; g++)
                            {
                                <li class="nav-item listGroup">
                                    <b>@appGroups[g].Key</b>
                                </li>
                                @for (int i = 0; i < appGroups[g].Count(); i++)
                                {
                                    AppInfo app = appGroups[g].ElementAt(i);
                                    <li class="nav-item item">
                                        <NavLink class="nav-link-app" href=@($"apps/{app.Name}") @onclick="()=> {  }">
                                            @ForgeLibs.NetStandardsUtils.AddSpace(app.Name)
                                        </NavLink>
                                    </li>
                                }
                            }
                        </ul>
                    }
                </li>
            </ul>
        </div>
    </div>

@code {

    //Add App and Project Links using the repository on Navbar

    private bool collapseNavMenu = true;
    private string navMenuCssClass => collapseNavMenu ? "collapse" : "dontCollapse";
    private bool showProjects = false;
    private bool showApps = false;
    private IEnumerable<Project> _projects = Enumerable.Empty<Project>();
    private IEnumerable<AppInfo> _apps = Enumerable.Empty<AppInfo>();
    private List<IGrouping<string, AppInfo>> appGroups = new List<IGrouping<string, AppInfo>>();

    public void ToggleNavMenu() { collapseNavMenu = !collapseNavMenu; }


    protected override void OnInitialized()
    {
        _projects = repo.Projects.OrderByDescending(x => x.Id);
        _apps = repo.AppsInfo;
        appGroups = _apps.GroupBy(x => x.Group).ToList();
    }
}
